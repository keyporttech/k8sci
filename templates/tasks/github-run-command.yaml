{{- $fullName := include "k8sCI.fullname" . -}}

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "k8sCI.fullname" . }}-run-command-github
  labels:
    {{- include "k8sCI.labels" . | nindent 4 }}
spec:
  resources:
    inputs:
    - name: git-repo
      type: git
  params:
    - name: org
    - name: repo
    - name: git_sha
    - name: ref
    - name: image
    - name: command
    - name: htmlurl
  results:
    - name: status
    - name: description
  steps:
    - name: run
      image: "$(params.image)"
      workingDir: "/workspace/git-repo"
      env:
      {{- range .Values.pipelineEnvSecrets }}
      - name: {{ .name }}
        valueFrom:
          secretKeyRef:
            name: {{ $fullName }}
            key: {{ .name }}
      {{- end }}
      command:
        - "bash"
      args:
        - "-cx"
        - |
          set +e;
          $(params.command);
          RESULT=$?
          [ $RESULT -eq 0 ] && echo "success" > /tekton/home/status || echo "failure" > /tekton/home/status;
          [ $RESULT -eq 0 ] && echo "build succeeded." > /tekton/home/description || echo "build failed." > /tekton/home/description
          exit 0;
      volumeMounts:
      - mountPath: /tekton/home
        name: home
      - mountPath: /var/lib/docker
        name: dind-storage
      - mountPath: /var/run/
        name: dind-socket
    - name: post-status
      image: "$(params.image)"
      workingDir: "/workspace/git-repo"
      command:
        - "bash"
      args:
        - "-cx"
        - |
          echo "posting status: status to github";
          export AWS_DEFAULT_REGION=us-west-2;
          export GITHUB_USER=$(aws ssm get-parameters --with-decryption  --names /cicd/github_user | jq .Parameters[0].Value | sed -e 's/^"//' -e 's/"$//');
          export GITHUB_TOKEN=$(aws ssm get-parameters --with-decryption  --names /cicd/github_token | jq .Parameters[0].Value | sed -e 's/^"//' -e 's/"$//');
          export STATE=$(cat /tekton/home/status)
          export DESCRIPTION=$(cat /tekton/home/description)
          curl -XPOST -u "${GITHUB_USER}:${GITHUB_TOKEN}" -d "{ \"state\":\"${STATE}\", \"description\": \"${DESCRIPTION}\", \"context\":\"watchdog-cicd\"}" https://api.github.com/repos/$(params.org)/$(params.repo)/statuses/$(params.git_sha)
      volumeMounts:
      - mountPath: /tekton/home
        name: home
    - name: report-if-error
      image: "$(params.image)"
      workingDir: "/workspace/git-repo"
      command:
        - "bash"
      args:
        - "-cx"
        - |
          echo "slack notifcation if error";
          export AWS_DEFAULT_REGION=us-west-2;
          export SLACK_WEBHOOK=$(aws ssm get-parameters --with-decryption  --names /cicd/slack_webhook | jq .Parameters[0].Value | sed -e 's/^"//' -e 's/"$//');
          export STATE=$(cat /tekton/home/status)
          export DESCRIPTION=$(cat /tekton/home/description)
          export VERSION=$(make version)
          [ "$STATE" != "success" ] && slack-message "$(params.org)/$(params.repo) version=${VERSION} FAILURE: ${STATE}: ${DESCRIPTION}" danger
      volumeMounts:
      - mountPath: /tekton/home
        name: home
  sidecars:
  - image: docker:18.05-dind
    name: server
    securityContext:
      privileged: true
    volumeMounts:
      - mountPath: /var/lib/docker
        name: dind-storage
      - mountPath: /var/run/
        name: dind-socket
  volumes:
    - name: home
      emptyDir: {}
    - name: dind-storage
      emptyDir: {}
    - name: dind-socket
      emptyDir: {}
